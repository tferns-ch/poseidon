version: '3.8'
services:
  # External Dependencies
  kafka:
    image: bitnami/kafka:latest
    hostname: broker
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - notification-network
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - notification-network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Module 1: Notification Sender API
  sender-api:
    image: eclipse-temurin:21-jre
    container_name: sender-api
    volumes:
      - ${SENDER_REPO_PATH}/target:/app
    working_dir: /app
    command: java -jar chs-notification-sender-api-unversioned.jar
    ports:
      - "8081:8080"
    environment:
      - BOOTSTRAP_SERVER_URL=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - notification-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/notification-sender/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Module 2: Notification Kafka Consumer
  kafka-consumer:
    image: eclipse-temurin:21-jre
    container_name: kafka-consumer
    volumes:
      - ${CONSUMER_REPO_PATH}/target:/app
    working_dir: /app
    command: java -jar chs-notification-kafka-consumer-unversioned.jar
    ports:
      - "8082:8080"
      - "9000:9000"
    environment:
      - BOOTSTRAP_SERVER_URL=kafka:9092
      - INTERNAL_API_URL=http://notify-integration-api:8080
    depends_on:
      kafka:
        condition: service_healthy
      govuk-notify-api:
        condition: service_healthy
    networks:
      - notification-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/notification-consumer/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Module 3: GOV.UK Notify Integration API
  govuk-notify-api:
    image: eclipse-temurin:21-jre
    container_name: govuk-notify-api
    volumes:
      - ${NOTIFY_REPO_PATH}/target:/app
    working_dir: /app
    command: java -jar chs-gov-uk-notify-integration-api-unversioned.jar
    ports:
      - "8083:8080"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - CHS_GOV_UK_NOTIFY_INTEGRATION_API_KEY=sharedteamapikeyaws-904c6f74-f758-4a25-a83a-dcfbdea4452f-a03d44b4-39eb-4185-b7e4-be58f4b2134b
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - notification-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/gov-uk-notify-integration/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  notification-network:
    driver: bridge

volumes:
  mongodb_data:
